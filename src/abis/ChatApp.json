{
  "contractName": "ChatApp",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "name": "etherSentEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "name": "messageSentEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "message",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct ChatApp.Message[]",
          "name": "messages",
          "type": "tuple[]"
        }
      ],
      "name": "messagesFetchedEvent",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "messages",
      "outputs": [
        {
          "internalType": "string",
          "name": "message",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "name": "sendMsg",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address payable",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "sendEther",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "getAllMsg",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"name\":\"etherSentEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"messageSentEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct ChatApp.Message[]\",\"name\":\"messages\",\"type\":\"tuple[]\"}],\"name\":\"messagesFetchedEvent\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"getAllMsg\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"messages\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"sendEther\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"sendMsg\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/tristanbilot/Desktop/Desktop/EPITA/S9/crypto/tp4/project/blockchain-chat-app/src/contracts/ChatApp.sol\":\"ChatApp\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/tristanbilot/Desktop/Desktop/EPITA/S9/crypto/tp4/project/blockchain-chat-app/src/contracts/ChatApp.sol\":{\"keccak256\":\"0x949b861a86f6fe6a8a46652fce8ec39ddcdab3ad24f50e6d241b23c98ed4c213\",\"urls\":[\"bzz-raw://07b3abc428eccc840b2d6a502365ceb6d225bad7d9d8616cb5c5961d131c2276\",\"dweb:/ipfs/QmcYfLVnx5sQoMgeS8F9nmtbmSLh4cqthYYPfV9VW3fQRe\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610f77806100206000396000f3fe60806040526004361061003f5760003560e01c806305e15c501461004457806348c981e21461006d57806374e96a4f146100895780637b02b2c9146100c7575b600080fd5b34801561005057600080fd5b5061006b60048036036100669190810190610934565b6100f0565b005b6100876004803603610082919081019061095d565b61033e565b005b34801561009557600080fd5b506100b060048036036100ab9190810190610986565b610420565b6040516100be929190610cc7565b60405180910390f35b3480156100d357600080fd5b506100ee60048036036100e991908101906109d5565b610523565b005b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050141561025b578073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f84f98e6e3886d9fe0747a845f61e31b3f01bb39ac0ff9fea88717e58002f11fc6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405161024e9190610c68565b60405180910390a361033b565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f84f98e6e3886d9fe0747a845f61e31b3f01bb39ac0ff9fea88717e58002f11fc6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040516103329190610c68565b60405180910390a35b50565b60008173ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505090508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167faaae1b43e37c4a529c17d6b26869d52ac0c31f5437e460e7cf611ac42e9f4170836040516103d49190610c8a565b60405180910390a38061041c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041390610cf7565b60405180910390fd5b5050565b6000602052826000526040600020602052816000526040600020818154811061044557fe5b90600052602060002090600202016000925092505050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104f35780601f106104c8576101008083540402835291602001916104f3565b820191906000526020600020905b8154815290600101906020018083116104d657829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180604001604052808381526020013373ffffffffffffffffffffffffffffffffffffffff168152509080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000190805190602001906106109291906107fc565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180604001604052808381526020013373ffffffffffffffffffffffffffffffffffffffff168152509080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000190805190602001906107489291906107fc565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6dc15866f16ccb265afd212167fbcae0b0fd203ba4bad85d6e53c8733d5248df836040516107f09190610ca5565b60405180910390a35050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061083d57805160ff191683800117855561086b565b8280016001018555821561086b579182015b8281111561086a57825182559160200191906001019061084f565b5b509050610878919061087c565b5090565b61089e91905b8082111561089a576000816000905550600101610882565b5090565b90565b6000813590506108b081610eef565b92915050565b6000813590506108c581610f06565b92915050565b600082601f8301126108dc57600080fd5b81356108ef6108ea82610d44565b610d17565b9150808252602083016020830185838301111561090b57600080fd5b610916838284610e75565b50505092915050565b60008135905061092e81610f1d565b92915050565b60006020828403121561094657600080fd5b6000610954848285016108a1565b91505092915050565b60006020828403121561096f57600080fd5b600061097d848285016108b6565b91505092915050565b60008060006060848603121561099b57600080fd5b60006109a9868287016108a1565b93505060206109ba868287016108a1565b92505060406109cb8682870161091f565b9150509250925092565b600080604083850312156109e857600080fd5b60006109f6858286016108a1565b925050602083013567ffffffffffffffff811115610a1357600080fd5b610a1f858286016108cb565b9150509250929050565b6000610a358383610c1f565b905092915050565b610a4681610e1b565b82525050565b610a5581610e1b565b82525050565b6000610a6682610d9a565b610a708185610dc8565b935083602082028501610a8285610d70565b8060005b85811015610abd57848403895281610a9e8582610a29565b9450610aa983610dbb565b925060208a01995050600181019050610a86565b50829750879550505050505092915050565b610ad881610e3f565b82525050565b6000610ae982610db0565b610af38185610dea565b9350610b03818560208601610e84565b610b0c81610ed1565b840191505092915050565b6000610b2282610da5565b610b2c8185610dea565b9350610b3c818560208601610e84565b610b4581610ed1565b840191505092915050565b600081546001811660008114610b6d5760018114610b9357610bd7565b607f6002830416610b7e8187610dd9565b955060ff198316865260208601935050610bd7565b60028204610ba18187610dd9565b9550610bac85610d85565b60005b82811015610bce57815481890152600182019150602081019050610baf565b80880195505050505b505092915050565b6000610bec601483610dea565b91507f4661696c656420746f2073656e642045746865720000000000000000000000006000830152602082019050919050565b60006040830160008084018583036000870152610c3c8382610b50565b92505060018401549050610c4f81610eb7565b610c5c6020870182610a3d565b50819250505092915050565b60006020820190508181036000830152610c828184610a5b565b905092915050565b6000602082019050610c9f6000830184610acf565b92915050565b60006020820190508181036000830152610cbf8184610ade565b905092915050565b60006040820190508181036000830152610ce18185610b17565b9050610cf06020830184610a4c565b9392505050565b60006020820190508181036000830152610d1081610bdf565b9050919050565b6000604051905081810181811067ffffffffffffffff82111715610d3a57600080fd5b8060405250919050565b600067ffffffffffffffff821115610d5b57600080fd5b601f19601f8301169050602081019050919050565b60008190508160005260206000209050919050565b60008190508160005260206000209050919050565b600081549050919050565b600081519050919050565b600081519050919050565b6000600282019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e2682610e4b565b9050919050565b6000610e3882610e4b565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610ea2578082015181840152602081019050610e87565b83811115610eb1576000848401525b50505050565b6000610eca610ec583610ee2565b610dfb565b9050919050565b6000601f19601f8301169050919050565b60008160001c9050919050565b610ef881610e1b565b8114610f0357600080fd5b50565b610f0f81610e2d565b8114610f1a57600080fd5b50565b610f2681610e6b565b8114610f3157600080fd5b5056fea365627a7a723158206de489d8bf6face22d297ea22d6da74f5740961026b1be16bc2f0f1319a124876c6578706572696d656e74616cf564736f6c63430005100040",
  "deployedBytecode": "0x60806040526004361061003f5760003560e01c806305e15c501461004457806348c981e21461006d57806374e96a4f146100895780637b02b2c9146100c7575b600080fd5b34801561005057600080fd5b5061006b60048036036100669190810190610934565b6100f0565b005b6100876004803603610082919081019061095d565b61033e565b005b34801561009557600080fd5b506100b060048036036100ab9190810190610986565b610420565b6040516100be929190610cc7565b60405180910390f35b3480156100d357600080fd5b506100ee60048036036100e991908101906109d5565b610523565b005b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050141561025b578073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f84f98e6e3886d9fe0747a845f61e31b3f01bb39ac0ff9fea88717e58002f11fc6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405161024e9190610c68565b60405180910390a361033b565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f84f98e6e3886d9fe0747a845f61e31b3f01bb39ac0ff9fea88717e58002f11fc6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040516103329190610c68565b60405180910390a35b50565b60008173ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505090508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167faaae1b43e37c4a529c17d6b26869d52ac0c31f5437e460e7cf611ac42e9f4170836040516103d49190610c8a565b60405180910390a38061041c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041390610cf7565b60405180910390fd5b5050565b6000602052826000526040600020602052816000526040600020818154811061044557fe5b90600052602060002090600202016000925092505050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104f35780601f106104c8576101008083540402835291602001916104f3565b820191906000526020600020905b8154815290600101906020018083116104d657829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180604001604052808381526020013373ffffffffffffffffffffffffffffffffffffffff168152509080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000190805190602001906106109291906107fc565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180604001604052808381526020013373ffffffffffffffffffffffffffffffffffffffff168152509080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000190805190602001906107489291906107fc565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6dc15866f16ccb265afd212167fbcae0b0fd203ba4bad85d6e53c8733d5248df836040516107f09190610ca5565b60405180910390a35050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061083d57805160ff191683800117855561086b565b8280016001018555821561086b579182015b8281111561086a57825182559160200191906001019061084f565b5b509050610878919061087c565b5090565b61089e91905b8082111561089a576000816000905550600101610882565b5090565b90565b6000813590506108b081610eef565b92915050565b6000813590506108c581610f06565b92915050565b600082601f8301126108dc57600080fd5b81356108ef6108ea82610d44565b610d17565b9150808252602083016020830185838301111561090b57600080fd5b610916838284610e75565b50505092915050565b60008135905061092e81610f1d565b92915050565b60006020828403121561094657600080fd5b6000610954848285016108a1565b91505092915050565b60006020828403121561096f57600080fd5b600061097d848285016108b6565b91505092915050565b60008060006060848603121561099b57600080fd5b60006109a9868287016108a1565b93505060206109ba868287016108a1565b92505060406109cb8682870161091f565b9150509250925092565b600080604083850312156109e857600080fd5b60006109f6858286016108a1565b925050602083013567ffffffffffffffff811115610a1357600080fd5b610a1f858286016108cb565b9150509250929050565b6000610a358383610c1f565b905092915050565b610a4681610e1b565b82525050565b610a5581610e1b565b82525050565b6000610a6682610d9a565b610a708185610dc8565b935083602082028501610a8285610d70565b8060005b85811015610abd57848403895281610a9e8582610a29565b9450610aa983610dbb565b925060208a01995050600181019050610a86565b50829750879550505050505092915050565b610ad881610e3f565b82525050565b6000610ae982610db0565b610af38185610dea565b9350610b03818560208601610e84565b610b0c81610ed1565b840191505092915050565b6000610b2282610da5565b610b2c8185610dea565b9350610b3c818560208601610e84565b610b4581610ed1565b840191505092915050565b600081546001811660008114610b6d5760018114610b9357610bd7565b607f6002830416610b7e8187610dd9565b955060ff198316865260208601935050610bd7565b60028204610ba18187610dd9565b9550610bac85610d85565b60005b82811015610bce57815481890152600182019150602081019050610baf565b80880195505050505b505092915050565b6000610bec601483610dea565b91507f4661696c656420746f2073656e642045746865720000000000000000000000006000830152602082019050919050565b60006040830160008084018583036000870152610c3c8382610b50565b92505060018401549050610c4f81610eb7565b610c5c6020870182610a3d565b50819250505092915050565b60006020820190508181036000830152610c828184610a5b565b905092915050565b6000602082019050610c9f6000830184610acf565b92915050565b60006020820190508181036000830152610cbf8184610ade565b905092915050565b60006040820190508181036000830152610ce18185610b17565b9050610cf06020830184610a4c565b9392505050565b60006020820190508181036000830152610d1081610bdf565b9050919050565b6000604051905081810181811067ffffffffffffffff82111715610d3a57600080fd5b8060405250919050565b600067ffffffffffffffff821115610d5b57600080fd5b601f19601f8301169050602081019050919050565b60008190508160005260206000209050919050565b60008190508160005260206000209050919050565b600081549050919050565b600081519050919050565b600081519050919050565b6000600282019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e2682610e4b565b9050919050565b6000610e3882610e4b565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610ea2578082015181840152602081019050610e87565b83811115610eb1576000848401525b50505050565b6000610eca610ec583610ee2565b610dfb565b9050919050565b6000601f19601f8301169050919050565b60008160001c9050919050565b610ef881610e1b565b8114610f0357600080fd5b50565b610f0f81610e2d565b8114610f1a57600080fd5b50565b610f2681610e6b565b8114610f3157600080fd5b5056fea365627a7a723158206de489d8bf6face22d297ea22d6da74f5740961026b1be16bc2f0f1319a124876c6578706572696d656e74616cf564736f6c63430005100040",
  "sourceMap": "67:1203:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;67:1203:0;;;;;;;",
  "deployedSourceMap": "67:1203:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;974:294;;8:9:-1;5:2;;;30:1;27;20:12;5:2;974:294:0;;;;;;;;;;;;;;;;:::i;:::-;;768:200;;;;;;;;;;;;;;;;:::i;:::-;;91:67;;8:9:-1;5:2;;;30:1;27;20:12;5:2;91:67:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;502:260;;8:9:-1;5:2;;;30:1;27;20:12;5:2;502:260:0;;;;;;;;;;;;;;;;:::i;:::-;;974:294;1061:1;1026:8;:20;1035:10;1026:20;;;;;;;;;;;;;;;:24;1047:2;1026:24;;;;;;;;;;;;;;;:31;;;;:36;1022:240;;;1116:2;1083:62;;1104:10;1083:62;;;1120:8;:12;1129:2;1120:12;;;;;;;;;;;;;;;:24;1133:10;1120:24;;;;;;;;;;;;;;;1083:62;;;;;;;;;;;;;;;1022:240;;;1222:2;1189:62;;1210:10;1189:62;;;1226:8;:20;1235:10;1226:20;;;;;;;;;;;;;;;:24;1247:2;1226:24;;;;;;;;;;;;;;;1189:62;;;;;;;;;;;;;;;1022:240;974:294;:::o;768:200::-;832:9;844:2;:7;;:18;852:9;844:18;;;;;;;;;;;;;;;;;;;;;;;832:30;;904:2;877:36;;892:10;877:36;;;908:4;877:36;;;;;;;;;;;;;;;932:4;924:37;;;;;;;;;;;;;;;;;;;;;;768:200;;:::o;91:67::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;502:260::-;571:8;:20;580:10;571:20;;;;;;;;;;;;;;;:24;592:2;571:24;;;;;;;;;;;;;;;601:28;;;;;;;;609:7;601:28;;;;618:10;601:28;;;;;571:59;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;571:59:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;640:8;:12;649:2;640:12;;;;;;;;;;;;;;;:24;653:10;640:24;;;;;;;;;;;;;;;670:28;;;;;;;;678:7;670:28;;;;687:10;670:28;;;;;640:59;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;640:59:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;743:2;714:41;;731:10;714:41;;;747:7;714:41;;;;;;;;;;;;;;;502:260;;:::o;67:1203::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;142:146;;230:6;217:20;208:29;;242:41;277:5;242:41;;;202:86;;;;;296:442;;398:3;391:4;383:6;379:17;375:27;365:2;;416:1;413;406:12;365:2;453:6;440:20;475:65;490:49;532:6;490:49;;;475:65;;;466:74;;560:6;553:5;546:21;596:4;588:6;584:17;629:4;622:5;618:16;664:3;655:6;650:3;646:16;643:25;640:2;;;681:1;678;671:12;640:2;691:41;725:6;720:3;715;691:41;;;358:380;;;;;;;;746:130;;826:6;813:20;804:29;;838:33;865:5;838:33;;;798:78;;;;;883:241;;987:2;975:9;966:7;962:23;958:32;955:2;;;1003:1;1000;993:12;955:2;1038:1;1055:53;1100:7;1091:6;1080:9;1076:22;1055:53;;;1045:63;;1017:97;949:175;;;;;1131:257;;1243:2;1231:9;1222:7;1218:23;1214:32;1211:2;;;1259:1;1256;1249:12;1211:2;1294:1;1311:61;1364:7;1355:6;1344:9;1340:22;1311:61;;;1301:71;;1273:105;1205:183;;;;;1395:491;;;;1533:2;1521:9;1512:7;1508:23;1504:32;1501:2;;;1549:1;1546;1539:12;1501:2;1584:1;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;;;1591:63;;1563:97;1691:2;1709:53;1754:7;1745:6;1734:9;1730:22;1709:53;;;1699:63;;1670:98;1799:2;1817:53;1862:7;1853:6;1842:9;1838:22;1817:53;;;1807:63;;1778:98;1495:391;;;;;;1893:472;;;2024:2;2012:9;2003:7;1999:23;1995:32;1992:2;;;2040:1;2037;2030:12;1992:2;2075:1;2092:53;2137:7;2128:6;2117:9;2113:22;2092:53;;;2082:63;;2054:97;2210:2;2199:9;2195:18;2182:32;2234:18;2226:6;2223:30;2220:2;;;2266:1;2263;2256:12;2220:2;2286:63;2341:7;2332:6;2321:9;2317:22;2286:63;;;2276:73;;2161:194;1986:379;;;;;;2373:235;;2513:89;2598:3;2590:6;2513:89;;;2499:103;;2492:116;;;;;2616:103;2689:24;2707:5;2689:24;;;2684:3;2677:37;2671:48;;;2726:113;2809:24;2827:5;2809:24;;;2804:3;2797:37;2791:48;;;2907:986;;3088:71;3153:5;3088:71;;;3172:105;3270:6;3265:3;3172:105;;;3165:112;;3300:3;3342:4;3334:6;3330:17;3325:3;3321:27;3369:73;3436:5;3369:73;;;3462:7;3490:1;3475:379;3500:6;3497:1;3494:13;3475:379;;;3562:9;3556:4;3552:20;3547:3;3540:33;3601:6;3622:103;3720:4;3705:13;3622:103;;;3614:111;;3742:77;3812:6;3742:77;;;3732:87;;3842:4;3837:3;3833:14;3826:21;;3532:322;3522:1;3519;3515:9;3510:14;;3475:379;;;3479:14;3867:4;3860:11;;3884:3;3877:10;;3067:826;;;;;;;;;;3901:104;3978:21;3993:5;3978:21;;;3973:3;3966:34;3960:45;;;4012:347;;4124:39;4157:5;4124:39;;;4175:71;4239:6;4234:3;4175:71;;;4168:78;;4251:52;4296:6;4291:3;4284:4;4277:5;4273:16;4251:52;;;4324:29;4346:6;4324:29;;;4319:3;4315:39;4308:46;;4104:255;;;;;;4366:339;;4474:35;4503:5;4474:35;;;4521:71;4585:6;4580:3;4521:71;;;4514:78;;4597:52;4642:6;4637:3;4630:4;4623:5;4619:16;4597:52;;;4670:29;4692:6;4670:29;;;4665:3;4661:39;4654:46;;4454:251;;;;;;4737:793;;4846:5;4840:12;4880:1;4869:9;4865:17;4893:1;4888:238;;;;5137:1;5132:392;;;;4858:666;;4888:238;4966:4;4962:1;4951:9;4947:17;4943:28;4985:61;5039:6;5034:3;4985:61;;;4978:68;;5084:4;5080:9;5069;5065:25;5060:3;5053:38;5114:4;5109:3;5105:14;5098:21;;4895:231;4888:238;;5132:392;5201:1;5190:9;5186:17;5217:61;5271:6;5266:3;5217:61;;;5210:68;;5300:38;5332:5;5300:38;;;5354:1;5362:130;5376:6;5373:1;5370:13;5362:130;;;5441:7;5435:14;5431:1;5426:3;5422:11;5415:35;5482:1;5473:7;5469:15;5458:26;;5398:4;5395:1;5391:12;5386:17;;5362:130;;;5515:1;5510:3;5506:11;5499:18;;5139:385;;;4858:666;;4816:714;;;;;;5539:320;;5699:67;5763:2;5758:3;5699:67;;;5692:74;;5799:22;5795:1;5790:3;5786:11;5779:43;5850:2;5845:3;5841:12;5834:19;;5685:174;;;;5922:633;;6056:4;6051:3;6047:14;6083:1;6154:4;6147:5;6143:16;6205:3;6199:4;6195:14;6188:4;6183:3;6179:14;6172:38;6225:70;6290:4;6276:12;6225:70;;;6217:78;;6094:213;6367:4;6360:5;6356:16;6350:23;6337:36;;6399:55;6444:9;6399:55;;;6460:63;6517:4;6512:3;6508:14;6494:12;6460:63;;;6317:212;6546:4;6539:11;;6029:526;;;;;;;6562:433;;6766:2;6755:9;6751:18;6743:26;;6816:9;6810:4;6806:20;6802:1;6791:9;6787:17;6780:47;6841:144;6980:4;6971:6;6841:144;;;6833:152;;6737:258;;;;;7002:201;;7114:2;7103:9;7099:18;7091:26;;7128:65;7190:1;7179:9;7175:17;7166:6;7128:65;;;7085:118;;;;;7210:301;;7348:2;7337:9;7333:18;7325:26;;7398:9;7392:4;7388:20;7384:1;7373:9;7369:17;7362:47;7423:78;7496:4;7487:6;7423:78;;;7415:86;;7319:192;;;;;7518:404;;7680:2;7669:9;7665:18;7657:26;;7730:9;7724:4;7720:20;7716:1;7705:9;7701:17;7694:47;7755:74;7824:4;7815:6;7755:74;;;7747:82;;7840:72;7908:2;7897:9;7893:18;7884:6;7840:72;;;7651:271;;;;;;7929:407;;8120:2;8109:9;8105:18;8097:26;;8170:9;8164:4;8160:20;8156:1;8145:9;8141:17;8134:47;8195:131;8321:4;8195:131;;;8187:139;;8091:245;;;;8343:256;;8405:2;8399:9;8389:19;;8443:4;8435:6;8431:17;8542:6;8530:10;8527:22;8506:18;8494:10;8491:34;8488:62;8485:2;;;8563:1;8560;8553:12;8485:2;8583:10;8579:2;8572:22;8383:216;;;;;8606:322;;8750:18;8742:6;8739:30;8736:2;;;8782:1;8779;8772:12;8736:2;8849:4;8845:9;8838:4;8830:6;8826:17;8822:33;8814:41;;8913:4;8907;8903:15;8895:23;;8673:255;;;;8935:193;;9038:3;9030:11;;9075:3;9072:1;9065:14;9107:4;9104:1;9094:18;9086:26;;9024:104;;;;9135:158;;9203:3;9195:11;;9240:3;9237:1;9230:14;9272:4;9269:1;9259:18;9251:26;;9189:104;;;;9300:161;;9432:5;9426:12;9416:22;;9391:70;;;;9468:118;;9558:5;9552:12;9542:22;;9523:63;;;;9593:122;;9687:5;9681:12;9671:22;;9652:63;;;;9722:125;;9837:4;9832:3;9828:14;9820:22;;9814:33;;;;9855:197;;10004:6;9999:3;9992:19;10041:4;10036:3;10032:14;10017:29;;9985:67;;;;;10061:153;;10166:6;10161:3;10154:19;10203:4;10198:3;10194:14;10179:29;;10147:67;;;;;10223:163;;10338:6;10333:3;10326:19;10375:4;10370:3;10366:14;10351:29;;10319:67;;;;;10394:134;;10480:42;10473:5;10469:54;10458:65;;10452:76;;;;10535:91;;10597:24;10615:5;10597:24;;;10586:35;;10580:46;;;;10633:99;;10703:24;10721:5;10703:24;;;10692:35;;10686:46;;;;10739:85;;10812:5;10805:13;10798:21;10787:32;;10781:43;;;;10831:121;;10904:42;10897:5;10893:54;10882:65;;10876:76;;;;10959:72;;11021:5;11010:16;;11004:27;;;;11039:145;11120:6;11115:3;11110;11097:30;11176:1;11167:6;11162:3;11158:16;11151:27;11090:94;;;;11193:268;11258:1;11265:101;11279:6;11276:1;11273:13;11265:101;;;11355:1;11350:3;11346:11;11340:18;11336:1;11331:3;11327:11;11320:39;11301:2;11298:1;11294:10;11289:15;;11265:101;;;11381:6;11378:1;11375:13;11372:2;;;11446:1;11437:6;11432:3;11428:16;11421:27;11372:2;11242:219;;;;;11469:161;;11559:66;11590:34;11613:10;11590:34;;;11559:66;;;11550:75;;11544:86;;;;11637:97;;11725:2;11721:7;11716:2;11709:5;11705:14;11701:28;11691:38;;11685:49;;;;11742:102;;11828:5;11825:1;11821:13;11799:35;;11793:51;;;;11852:117;11921:24;11939:5;11921:24;;;11914:5;11911:35;11901:2;;11960:1;11957;11950:12;11901:2;11895:74;;11976:133;12053:32;12079:5;12053:32;;;12046:5;12043:43;12033:2;;12100:1;12097;12090:12;12033:2;12027:82;;12116:117;12185:24;12203:5;12185:24;;;12178:5;12175:35;12165:2;;12224:1;12221;12214:12;12165:2;12159:74;",
  "source": "// SPDX-License-Identifier: MIT\npragma experimental ABIEncoderV2;\n\ncontract ChatApp {\n\n    mapping (address => mapping (address => Message[])) public messages;\n\n    struct Message {\n        string message;\n        address from;\n    }\n\n    event messageSentEvent(address indexed from, address indexed to, string message);\n    event etherSentEvent(address indexed from, address indexed to, bool success);\n    event messagesFetchedEvent(address indexed from, address indexed to, Message[] messages);\n\n    function sendMsg(address to, string memory message) public {\n        messages[msg.sender][to].push(Message(message, msg.sender));\n        messages[to][msg.sender].push(Message(message, msg.sender));\n        emit messageSentEvent(msg.sender, to, message);\n    }\n\n    function sendEther(address payable to) public payable {\n        bool sent = to.send(msg.value);\n        emit etherSentEvent(msg.sender, to, sent);\n\n        require(sent, \"Failed to send Ether\");\n    }\n\n    function getAllMsg(address to) public {\n        if (messages[msg.sender][to].length == 0) {\n            emit messagesFetchedEvent(msg.sender, to, messages[to][msg.sender]);\n        }\n        else {\n            emit messagesFetchedEvent(msg.sender, to, messages[msg.sender][to]);\n        }\n    }\n}\n",
  "sourcePath": "/Users/tristanbilot/Desktop/Desktop/EPITA/S9/crypto/tp4/project/blockchain-chat-app/src/contracts/ChatApp.sol",
  "ast": {
    "absolutePath": "/Users/tristanbilot/Desktop/Desktop/EPITA/S9/crypto/tp4/project/blockchain-chat-app/src/contracts/ChatApp.sol",
    "exportedSymbols": {
      "ChatApp": [
        150
      ]
    },
    "id": 151,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:33:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 150,
        "linearizedBaseContracts": [
          150
        ],
        "name": "ChatApp",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 8,
            "name": "messages",
            "nodeType": "VariableDeclaration",
            "scope": 150,
            "src": "91:67:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$_$",
              "typeString": "mapping(address => mapping(address => struct ChatApp.Message[]))"
            },
            "typeName": {
              "id": 7,
              "keyType": {
                "id": 2,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "100:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "91:51:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$_$",
                "typeString": "mapping(address => mapping(address => struct ChatApp.Message[]))"
              },
              "valueType": {
                "id": 6,
                "keyType": {
                  "id": 3,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "120:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "111:30:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$",
                  "typeString": "mapping(address => struct ChatApp.Message[])"
                },
                "valueType": {
                  "baseType": {
                    "contractScope": null,
                    "id": 4,
                    "name": "Message",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13,
                    "src": "131:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Message_$13_storage_ptr",
                      "typeString": "struct ChatApp.Message"
                    }
                  },
                  "id": 5,
                  "length": null,
                  "nodeType": "ArrayTypeName",
                  "src": "131:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Message_$13_storage_$dyn_storage_ptr",
                    "typeString": "struct ChatApp.Message[]"
                  }
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "ChatApp.Message",
            "id": 13,
            "members": [
              {
                "constant": false,
                "id": 10,
                "name": "message",
                "nodeType": "VariableDeclaration",
                "scope": 13,
                "src": "190:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 9,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "190:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12,
                "name": "from",
                "nodeType": "VariableDeclaration",
                "scope": 13,
                "src": "214:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 11,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "214:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Message",
            "nodeType": "StructDefinition",
            "scope": 150,
            "src": "165:68:0",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 21,
            "name": "messageSentEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "indexed": true,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 21,
                  "src": "262:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "262:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17,
                  "indexed": true,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 21,
                  "src": "284:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "284:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19,
                  "indexed": false,
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "scope": 21,
                  "src": "304:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "304:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "261:58:0"
            },
            "src": "239:81:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 29,
            "name": "etherSentEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23,
                  "indexed": true,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "346:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "346:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "indexed": true,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "368:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "368:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "indexed": false,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "388:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "388:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "345:56:0"
            },
            "src": "325:77:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 38,
            "name": "messagesFetchedEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31,
                  "indexed": true,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "434:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "434:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "indexed": true,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "456:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "456:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "indexed": false,
                  "name": "messages",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "476:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Message_$13_memory_$dyn_memory_ptr",
                    "typeString": "struct ChatApp.Message[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 34,
                      "name": "Message",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 13,
                      "src": "476:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Message_$13_storage_ptr",
                        "typeString": "struct ChatApp.Message"
                      }
                    },
                    "id": 35,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "476:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Message_$13_storage_$dyn_storage_ptr",
                      "typeString": "struct ChatApp.Message[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "433:62:0"
            },
            "src": "407:89:0"
          },
          {
            "body": {
              "id": 80,
              "nodeType": "Block",
              "src": "561:201:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 53,
                            "name": "message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "609:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 54,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 222,
                              "src": "618:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 55,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "618:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 52,
                          "name": "Message",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "601:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Message_$13_storage_ptr_$",
                            "typeString": "type(struct ChatApp.Message storage pointer)"
                          }
                        },
                        "id": 56,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "601:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Message_$13_memory",
                          "typeString": "struct ChatApp.Message memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Message_$13_memory",
                          "typeString": "struct ChatApp.Message memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 45,
                            "name": "messages",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "571:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct ChatApp.Message storage ref[] storage ref))"
                            }
                          },
                          "id": 49,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 46,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 222,
                              "src": "580:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 47,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "580:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "571:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct ChatApp.Message storage ref[] storage ref)"
                          }
                        },
                        "id": 50,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 48,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40,
                          "src": "592:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "571:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Message_$13_storage_$dyn_storage",
                          "typeString": "struct ChatApp.Message storage ref[] storage ref"
                        }
                      },
                      "id": 51,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "571:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Message_$13_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct ChatApp.Message storage ref) returns (uint256)"
                      }
                    },
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "571:59:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 58,
                  "nodeType": "ExpressionStatement",
                  "src": "571:59:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 67,
                            "name": "message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "678:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 68,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 222,
                              "src": "687:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 69,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "687:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 66,
                          "name": "Message",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "670:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Message_$13_storage_ptr_$",
                            "typeString": "type(struct ChatApp.Message storage pointer)"
                          }
                        },
                        "id": 70,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "670:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Message_$13_memory",
                          "typeString": "struct ChatApp.Message memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Message_$13_memory",
                          "typeString": "struct ChatApp.Message memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 59,
                            "name": "messages",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "640:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct ChatApp.Message storage ref[] storage ref))"
                            }
                          },
                          "id": 63,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 60,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40,
                            "src": "649:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "640:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct ChatApp.Message storage ref[] storage ref)"
                          }
                        },
                        "id": 64,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 61,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 222,
                            "src": "653:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 62,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "653:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "640:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Message_$13_storage_$dyn_storage",
                          "typeString": "struct ChatApp.Message storage ref[] storage ref"
                        }
                      },
                      "id": 65,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "640:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Message_$13_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct ChatApp.Message storage ref) returns (uint256)"
                      }
                    },
                    "id": 71,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "640:59:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 72,
                  "nodeType": "ExpressionStatement",
                  "src": "640:59:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 74,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 222,
                          "src": "731:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "731:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 76,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "743:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 77,
                        "name": "message",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "747:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 73,
                      "name": "messageSentEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "714:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory)"
                      }
                    },
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "714:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79,
                  "nodeType": "EmitStatement",
                  "src": "709:46:0"
                }
              ]
            },
            "documentation": null,
            "id": 81,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendMsg",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "519:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "519:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42,
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "531:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "531:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "518:35:0"
            },
            "returnParameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "561:0:0"
            },
            "scope": 150,
            "src": "502:260:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 106,
              "nodeType": "Block",
              "src": "822:146:0",
              "statements": [
                {
                  "assignments": [
                    87
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87,
                      "name": "sent",
                      "nodeType": "VariableDeclaration",
                      "scope": 106,
                      "src": "832:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 86,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "832:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 93,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 90,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 222,
                          "src": "852:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "852:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 88,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "844:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 89,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "send",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "844:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) returns (bool)"
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "844:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "832:30:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 95,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 222,
                          "src": "892:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "892:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 97,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "904:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 98,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87,
                        "src": "908:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 94,
                      "name": "etherSentEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "877:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "877:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100,
                  "nodeType": "EmitStatement",
                  "src": "872:41:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 102,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87,
                        "src": "932:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4661696c656420746f2073656e64204574686572",
                        "id": 103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "938:22:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        },
                        "value": "Failed to send Ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        }
                      ],
                      "id": 101,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        225,
                        226
                      ],
                      "referencedDeclaration": 226,
                      "src": "924:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "924:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "924:37:0"
                }
              ]
            },
            "documentation": null,
            "id": 107,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendEther",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "787:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "787:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "786:20:0"
            },
            "returnParameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "822:0:0"
            },
            "scope": 150,
            "src": "768:200:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 148,
              "nodeType": "Block",
              "src": "1012:256:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 112,
                            "name": "messages",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "1026:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct ChatApp.Message storage ref[] storage ref))"
                            }
                          },
                          "id": 115,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 113,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 222,
                              "src": "1035:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1035:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1026:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct ChatApp.Message storage ref[] storage ref)"
                          }
                        },
                        "id": 117,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 116,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 109,
                          "src": "1047:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1026:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Message_$13_storage_$dyn_storage",
                          "typeString": "struct ChatApp.Message storage ref[] storage ref"
                        }
                      },
                      "id": 118,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1026:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1061:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1026:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 146,
                    "nodeType": "Block",
                    "src": "1170:92:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 135,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 222,
                                "src": "1210:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 136,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1210:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 137,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 109,
                              "src": "1222:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 138,
                                  "name": "messages",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8,
                                  "src": "1226:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$_$",
                                    "typeString": "mapping(address => mapping(address => struct ChatApp.Message storage ref[] storage ref))"
                                  }
                                },
                                "id": 141,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 139,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 222,
                                    "src": "1235:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 140,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "1235:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1226:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct ChatApp.Message storage ref[] storage ref)"
                                }
                              },
                              "id": 143,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 142,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 109,
                                "src": "1247:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1226:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Message_$13_storage_$dyn_storage",
                                "typeString": "struct ChatApp.Message storage ref[] storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_struct$_Message_$13_storage_$dyn_storage",
                                "typeString": "struct ChatApp.Message storage ref[] storage ref"
                              }
                            ],
                            "id": 134,
                            "name": "messagesFetchedEvent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "1189:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_array$_t_struct$_Message_$13_memory_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,struct ChatApp.Message memory[] memory)"
                            }
                          },
                          "id": 144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1189:62:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 145,
                        "nodeType": "EmitStatement",
                        "src": "1184:67:0"
                      }
                    ]
                  },
                  "id": 147,
                  "nodeType": "IfStatement",
                  "src": "1022:240:0",
                  "trueBody": {
                    "id": 133,
                    "nodeType": "Block",
                    "src": "1064:92:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 122,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 222,
                                "src": "1104:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1104:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 124,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 109,
                              "src": "1116:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 125,
                                  "name": "messages",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8,
                                  "src": "1120:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$_$",
                                    "typeString": "mapping(address => mapping(address => struct ChatApp.Message storage ref[] storage ref))"
                                  }
                                },
                                "id": 127,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 126,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 109,
                                  "src": "1129:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1120:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct ChatApp.Message storage ref[] storage ref)"
                                }
                              },
                              "id": 130,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 128,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 222,
                                  "src": "1133:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 129,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1133:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1120:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Message_$13_storage_$dyn_storage",
                                "typeString": "struct ChatApp.Message storage ref[] storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_struct$_Message_$13_storage_$dyn_storage",
                                "typeString": "struct ChatApp.Message storage ref[] storage ref"
                              }
                            ],
                            "id": 121,
                            "name": "messagesFetchedEvent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "1083:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_array$_t_struct$_Message_$13_memory_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,struct ChatApp.Message memory[] memory)"
                            }
                          },
                          "id": 131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1083:62:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 132,
                        "nodeType": "EmitStatement",
                        "src": "1078:67:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 149,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllMsg",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 109,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 149,
                  "src": "993:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "993:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "992:12:0"
            },
            "returnParameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1012:0:0"
            },
            "scope": 150,
            "src": "974:294:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 151,
        "src": "67:1203:0"
      }
    ],
    "src": "32:1239:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/tristanbilot/Desktop/Desktop/EPITA/S9/crypto/tp4/project/blockchain-chat-app/src/contracts/ChatApp.sol",
    "exportedSymbols": {
      "ChatApp": [
        150
      ]
    },
    "id": 151,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:33:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 150,
        "linearizedBaseContracts": [
          150
        ],
        "name": "ChatApp",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 8,
            "name": "messages",
            "nodeType": "VariableDeclaration",
            "scope": 150,
            "src": "91:67:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$_$",
              "typeString": "mapping(address => mapping(address => struct ChatApp.Message[]))"
            },
            "typeName": {
              "id": 7,
              "keyType": {
                "id": 2,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "100:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "91:51:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$_$",
                "typeString": "mapping(address => mapping(address => struct ChatApp.Message[]))"
              },
              "valueType": {
                "id": 6,
                "keyType": {
                  "id": 3,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "120:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "111:30:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$",
                  "typeString": "mapping(address => struct ChatApp.Message[])"
                },
                "valueType": {
                  "baseType": {
                    "contractScope": null,
                    "id": 4,
                    "name": "Message",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13,
                    "src": "131:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Message_$13_storage_ptr",
                      "typeString": "struct ChatApp.Message"
                    }
                  },
                  "id": 5,
                  "length": null,
                  "nodeType": "ArrayTypeName",
                  "src": "131:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Message_$13_storage_$dyn_storage_ptr",
                    "typeString": "struct ChatApp.Message[]"
                  }
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "ChatApp.Message",
            "id": 13,
            "members": [
              {
                "constant": false,
                "id": 10,
                "name": "message",
                "nodeType": "VariableDeclaration",
                "scope": 13,
                "src": "190:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 9,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "190:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12,
                "name": "from",
                "nodeType": "VariableDeclaration",
                "scope": 13,
                "src": "214:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 11,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "214:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Message",
            "nodeType": "StructDefinition",
            "scope": 150,
            "src": "165:68:0",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 21,
            "name": "messageSentEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "indexed": true,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 21,
                  "src": "262:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "262:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17,
                  "indexed": true,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 21,
                  "src": "284:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "284:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19,
                  "indexed": false,
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "scope": 21,
                  "src": "304:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "304:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "261:58:0"
            },
            "src": "239:81:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 29,
            "name": "etherSentEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23,
                  "indexed": true,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "346:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "346:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "indexed": true,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "368:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "368:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "indexed": false,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "388:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "388:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "345:56:0"
            },
            "src": "325:77:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 38,
            "name": "messagesFetchedEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31,
                  "indexed": true,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "434:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "434:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "indexed": true,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "456:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "456:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "indexed": false,
                  "name": "messages",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "476:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Message_$13_memory_$dyn_memory_ptr",
                    "typeString": "struct ChatApp.Message[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 34,
                      "name": "Message",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 13,
                      "src": "476:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Message_$13_storage_ptr",
                        "typeString": "struct ChatApp.Message"
                      }
                    },
                    "id": 35,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "476:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Message_$13_storage_$dyn_storage_ptr",
                      "typeString": "struct ChatApp.Message[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "433:62:0"
            },
            "src": "407:89:0"
          },
          {
            "body": {
              "id": 80,
              "nodeType": "Block",
              "src": "561:201:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 53,
                            "name": "message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "609:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 54,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 222,
                              "src": "618:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 55,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "618:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 52,
                          "name": "Message",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "601:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Message_$13_storage_ptr_$",
                            "typeString": "type(struct ChatApp.Message storage pointer)"
                          }
                        },
                        "id": 56,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "601:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Message_$13_memory",
                          "typeString": "struct ChatApp.Message memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Message_$13_memory",
                          "typeString": "struct ChatApp.Message memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 45,
                            "name": "messages",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "571:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct ChatApp.Message storage ref[] storage ref))"
                            }
                          },
                          "id": 49,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 46,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 222,
                              "src": "580:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 47,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "580:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "571:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct ChatApp.Message storage ref[] storage ref)"
                          }
                        },
                        "id": 50,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 48,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40,
                          "src": "592:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "571:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Message_$13_storage_$dyn_storage",
                          "typeString": "struct ChatApp.Message storage ref[] storage ref"
                        }
                      },
                      "id": 51,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "571:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Message_$13_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct ChatApp.Message storage ref) returns (uint256)"
                      }
                    },
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "571:59:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 58,
                  "nodeType": "ExpressionStatement",
                  "src": "571:59:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 67,
                            "name": "message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "678:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 68,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 222,
                              "src": "687:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 69,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "687:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 66,
                          "name": "Message",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "670:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Message_$13_storage_ptr_$",
                            "typeString": "type(struct ChatApp.Message storage pointer)"
                          }
                        },
                        "id": 70,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "670:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Message_$13_memory",
                          "typeString": "struct ChatApp.Message memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Message_$13_memory",
                          "typeString": "struct ChatApp.Message memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 59,
                            "name": "messages",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "640:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct ChatApp.Message storage ref[] storage ref))"
                            }
                          },
                          "id": 63,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 60,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40,
                            "src": "649:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "640:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct ChatApp.Message storage ref[] storage ref)"
                          }
                        },
                        "id": 64,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 61,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 222,
                            "src": "653:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 62,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "653:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "640:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Message_$13_storage_$dyn_storage",
                          "typeString": "struct ChatApp.Message storage ref[] storage ref"
                        }
                      },
                      "id": 65,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "640:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Message_$13_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct ChatApp.Message storage ref) returns (uint256)"
                      }
                    },
                    "id": 71,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "640:59:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 72,
                  "nodeType": "ExpressionStatement",
                  "src": "640:59:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 74,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 222,
                          "src": "731:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "731:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 76,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "743:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 77,
                        "name": "message",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "747:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 73,
                      "name": "messageSentEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "714:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory)"
                      }
                    },
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "714:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79,
                  "nodeType": "EmitStatement",
                  "src": "709:46:0"
                }
              ]
            },
            "documentation": null,
            "id": 81,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendMsg",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "519:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "519:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42,
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "531:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "531:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "518:35:0"
            },
            "returnParameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "561:0:0"
            },
            "scope": 150,
            "src": "502:260:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 106,
              "nodeType": "Block",
              "src": "822:146:0",
              "statements": [
                {
                  "assignments": [
                    87
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87,
                      "name": "sent",
                      "nodeType": "VariableDeclaration",
                      "scope": 106,
                      "src": "832:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 86,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "832:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 93,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 90,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 222,
                          "src": "852:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "852:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 88,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "844:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 89,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "send",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "844:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) returns (bool)"
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "844:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "832:30:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 95,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 222,
                          "src": "892:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "892:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 97,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "904:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 98,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87,
                        "src": "908:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 94,
                      "name": "etherSentEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "877:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "877:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100,
                  "nodeType": "EmitStatement",
                  "src": "872:41:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 102,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87,
                        "src": "932:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4661696c656420746f2073656e64204574686572",
                        "id": 103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "938:22:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        },
                        "value": "Failed to send Ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        }
                      ],
                      "id": 101,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        225,
                        226
                      ],
                      "referencedDeclaration": 226,
                      "src": "924:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "924:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "924:37:0"
                }
              ]
            },
            "documentation": null,
            "id": 107,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendEther",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "787:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "787:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "786:20:0"
            },
            "returnParameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "822:0:0"
            },
            "scope": 150,
            "src": "768:200:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 148,
              "nodeType": "Block",
              "src": "1012:256:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 112,
                            "name": "messages",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "1026:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct ChatApp.Message storage ref[] storage ref))"
                            }
                          },
                          "id": 115,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 113,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 222,
                              "src": "1035:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1035:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1026:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct ChatApp.Message storage ref[] storage ref)"
                          }
                        },
                        "id": 117,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 116,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 109,
                          "src": "1047:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1026:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Message_$13_storage_$dyn_storage",
                          "typeString": "struct ChatApp.Message storage ref[] storage ref"
                        }
                      },
                      "id": 118,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1026:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1061:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1026:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 146,
                    "nodeType": "Block",
                    "src": "1170:92:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 135,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 222,
                                "src": "1210:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 136,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1210:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 137,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 109,
                              "src": "1222:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 138,
                                  "name": "messages",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8,
                                  "src": "1226:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$_$",
                                    "typeString": "mapping(address => mapping(address => struct ChatApp.Message storage ref[] storage ref))"
                                  }
                                },
                                "id": 141,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 139,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 222,
                                    "src": "1235:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 140,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "1235:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1226:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct ChatApp.Message storage ref[] storage ref)"
                                }
                              },
                              "id": 143,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 142,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 109,
                                "src": "1247:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1226:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Message_$13_storage_$dyn_storage",
                                "typeString": "struct ChatApp.Message storage ref[] storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_struct$_Message_$13_storage_$dyn_storage",
                                "typeString": "struct ChatApp.Message storage ref[] storage ref"
                              }
                            ],
                            "id": 134,
                            "name": "messagesFetchedEvent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "1189:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_array$_t_struct$_Message_$13_memory_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,struct ChatApp.Message memory[] memory)"
                            }
                          },
                          "id": 144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1189:62:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 145,
                        "nodeType": "EmitStatement",
                        "src": "1184:67:0"
                      }
                    ]
                  },
                  "id": 147,
                  "nodeType": "IfStatement",
                  "src": "1022:240:0",
                  "trueBody": {
                    "id": 133,
                    "nodeType": "Block",
                    "src": "1064:92:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 122,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 222,
                                "src": "1104:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1104:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 124,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 109,
                              "src": "1116:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 125,
                                  "name": "messages",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8,
                                  "src": "1120:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$_$",
                                    "typeString": "mapping(address => mapping(address => struct ChatApp.Message storage ref[] storage ref))"
                                  }
                                },
                                "id": 127,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 126,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 109,
                                  "src": "1129:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1120:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct ChatApp.Message storage ref[] storage ref)"
                                }
                              },
                              "id": 130,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 128,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 222,
                                  "src": "1133:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 129,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1133:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1120:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Message_$13_storage_$dyn_storage",
                                "typeString": "struct ChatApp.Message storage ref[] storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_struct$_Message_$13_storage_$dyn_storage",
                                "typeString": "struct ChatApp.Message storage ref[] storage ref"
                              }
                            ],
                            "id": 121,
                            "name": "messagesFetchedEvent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "1083:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_array$_t_struct$_Message_$13_memory_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,struct ChatApp.Message memory[] memory)"
                            }
                          },
                          "id": 131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1083:62:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 132,
                        "nodeType": "EmitStatement",
                        "src": "1078:67:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 149,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllMsg",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 109,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 149,
                  "src": "993:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "993:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "992:12:0"
            },
            "returnParameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1012:0:0"
            },
            "scope": 150,
            "src": "974:294:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 151,
        "src": "67:1203:0"
      }
    ],
    "src": "32:1239:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x51a7f65c6325882f237d4aeb43228179cfad48b868511d508e24b4437a819137": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "msg",
              "type": "string"
            }
          ],
          "name": "Message",
          "type": "event"
        },
        "0x811f7cff0a3374ff67cccc3726035d34ba70410e0256818a891e4d6acc01d88e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "msg",
              "type": "string"
            }
          ],
          "name": "Message",
          "type": "event"
        },
        "0x6dc15866f16ccb265afd212167fbcae0b0fd203ba4bad85d6e53c8733d5248df": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "message",
              "type": "string"
            }
          ],
          "name": "messageSentEvent",
          "type": "event"
        },
        "0xaaae1b43e37c4a529c17d6b26869d52ac0c31f5437e460e7cf611ac42e9f4170": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            }
          ],
          "name": "etherSentEvent",
          "type": "event"
        },
        "0xa5b6bfacc547deb094d1c4e9169a14804bfdd1871135e1c36443ff9891cb043b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string[]",
              "name": "messages",
              "type": "string[]"
            }
          ],
          "name": "messagesFetchedEvent",
          "type": "event"
        },
        "0x84f98e6e3886d9fe0747a845f61e31b3f01bb39ac0ff9fea88717e58002f11fc": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "message",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                }
              ],
              "indexed": false,
              "internalType": "struct ChatApp.Message[]",
              "name": "messages",
              "type": "tuple[]"
            }
          ],
          "name": "messagesFetchedEvent",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xB0Bf9B600789CB9Ae2d5e3943126f81b13708677",
      "transactionHash": "0xa42f25878a65e9fbc1d527fa1eac66952e24fd4f3f5a48e20997b4f8bed919e4"
    }
  },
  "schemaVersion": "3.0.23",
  "updatedAt": "2021-10-26T21:54:43.342Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}